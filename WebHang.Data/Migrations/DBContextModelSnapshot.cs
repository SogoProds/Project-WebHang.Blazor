// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WebHang.Data;

namespace WebHang.Data.Migrations
{
    [DbContext(typeof(DBContext))]
    partial class DBContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.6-servicing-10079")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("WebHang.Models.Category", b =>
                {
                    b.Property<int>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CategoryName")
                        .IsRequired();

                    b.HasKey("CategoryId");

                    b.ToTable("Categories");
                });

            modelBuilder.Entity("WebHang.Models.Highscore", b =>
                {
                    b.Property<int>("HighscoreId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("HighscoreEasy");

                    b.Property<int?>("HighscoreHard");

                    b.Property<int?>("HighscoreMedium");

                    b.Property<int>("HighscorePlayerId");

                    b.Property<int?>("HighscoreTotal");

                    b.HasKey("HighscoreId");

                    b.HasIndex("HighscorePlayerId");

                    b.ToTable("Highscores");
                });

            modelBuilder.Entity("WebHang.Models.Player", b =>
                {
                    b.Property<int>("PlayerId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("PlayerName")
                        .IsRequired();

                    b.Property<string>("PlayerPassword")
                        .IsRequired();

                    b.HasKey("PlayerId");

                    b.ToTable("Players");

                    b.HasData(
                        new
                        {
                            PlayerId = 1,
                            PlayerName = "Min4o-Izparitelq",
                            PlayerPassword = "newto-newto-kodirana-parola"
                        });
                });

            modelBuilder.Entity("WebHang.Models.Word", b =>
                {
                    b.Property<int>("WordId")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("WordCategoryId");

                    b.Property<string>("WordContent")
                        .IsRequired();

                    b.Property<int>("WordDifficulty");

                    b.HasKey("WordId");

                    b.HasIndex("WordCategoryId");

                    b.ToTable("Words");
                });

            modelBuilder.Entity("WebHang.Models.Highscore", b =>
                {
                    b.HasOne("WebHang.Models.Player", "Player")
                        .WithMany()
                        .HasForeignKey("HighscorePlayerId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("WebHang.Models.Word", b =>
                {
                    b.HasOne("WebHang.Models.Category", "Category")
                        .WithMany()
                        .HasForeignKey("WordCategoryId")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
